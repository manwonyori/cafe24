version: '3.8'

services:
  app:
    build: .
    container_name: cafe24-automation
    restart: unless-stopped
    ports:
      - "5000:5000"  # For future web interface
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./cache:/app/cache
    env_file:
      - ./config/.env
    environment:
      - PYTHONUNBUFFERED=1
      - CAFE24_ENV=production
    healthcheck:
      test: ["CMD", "python", "-c", "from src.cafe24_system import Cafe24System; s = Cafe24System(); exit(0 if s.check_system_health()['status'] == 'healthy' else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cafe24-network

  redis:
    image: redis:7-alpine
    container_name: cafe24-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - cafe24-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: cafe24-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./static:/usr/share/nginx/html:ro
    depends_on:
      - app
    networks:
      - cafe24-network

volumes:
  redis-data:
    driver: local

networks:
  cafe24-network:
    driver: bridge